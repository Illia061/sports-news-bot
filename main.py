
#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
from parser import get_latest_news
from ai_processor import process_article_for_posting, has_openai_key

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø–∞—Ä—Å–∏–Ω–≥—É –Ω–æ–≤–∏–Ω Football.ua")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ OpenAI API –∫–ª—é—á–∞
    if has_openai_key():
        print("‚úÖ OpenAI API –∫–ª—é—á –∑–Ω–∞–π–¥–µ–Ω–æ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ AI —Ä–µ–∑—é–º–µ")
    else:
        print("‚ö†Ô∏è  OpenAI API –∫–ª—é—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±–∞–∑–æ–≤—ñ —Ä–µ–∑—é–º–µ")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏
    print("\nüîç –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏...")
    news_list = get_latest_news()
    
    if not news_list:
        print("‚ùå –ù–æ–≤–∏–Ω–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑'—î–¥–Ω–∞–Ω–Ω—è –∞–±–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–∞–π—Ç—É.")
        return
    
    print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(news_list)} –Ω–æ–≤–∏–Ω –¥–ª—è –æ–±—Ä–æ–±–∫–∏")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –Ω–æ–≤–æ—Å—Ç—å
    processed_articles = []
    
    for i, article in enumerate(news_list, 1):
        print(f"\nüìñ –û–±—Ä–æ–±–ª—è—î–º–æ –Ω–æ–≤–∏–Ω—É {i}/{len(news_list)}...")
        print(f"   –ó–∞–≥–æ–ª–æ–≤–æ–∫: {article.get('title', '')[:50]}...")
        
        try:
            # –ü–æ–ª–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—å–∏
            processed_article = process_article_for_posting(article)
            processed_articles.append(processed_article)
            
            print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ")
            if processed_article['image_path']:
                print(f"üñºÔ∏è  –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {processed_article['image_path']}")
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏: {e}")
            # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
            processed_articles.append({
                'title': article.get('title', ''),
                'post_text': f"‚öΩ {article.get('title', '')}\n\n#—Ñ—É—Ç–±–æ–ª #–Ω–æ–≤–∏–Ω–∏",
                'image_path': '',
                'image_url': article.get('image_url', ''),
                'url': article.get('link', ''),
                'summary': article.get('summary', '')
            })
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "=" * 60)
    print("üì∞ –û–ë–†–û–ë–õ–ï–ù–Ü –§–£–¢–ë–û–õ–¨–ù–Ü –ù–û–í–ò–ù–ò")
    print("=" * 60)
    
    for i, article in enumerate(processed_articles, 1):
        print(f"\nüìå –ù–û–í–ò–ù–ê {i}")
        print("-" * 40)
        print(f"üìù –¢–µ–∫—Å—Ç –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó:")
        print(article['post_text'])
        
        if article['image_path']:
            print(f"üñºÔ∏è  –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è: {article['image_path']}")
        elif article['image_url']:
            print(f"üñºÔ∏è  –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è (URL): {article['image_url']}")
        else:
            print("üö´ –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤—ñ–¥—Å—É—Ç–Ω—î")
        
        print(f"üîó –î–∂–µ—Ä–µ–ª–æ: {article['url']}")
        print("=" * 60)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   üì∞ –í—Å—å–æ–≥–æ –Ω–æ–≤–∏–Ω: {len(processed_articles)}")
    print(f"   üñºÔ∏è  –ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏: {sum(1 for a in processed_articles if a['image_path'])}")
    print(f"   ü§ñ –ó AI —Ä–µ–∑—é–º–µ: {'–¢–∞–∫' if has_openai_key() else '–ù—ñ'}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    try:
        import json
        
        output_data = {
            'timestamp': str(datetime.now()),
            'total_articles': len(processed_articles),
            'articles': processed_articles
        }
        
        with open('processed_news.json', 'w', encoding='utf-8') as f:
            json.dump(output_data, f, ensure_ascii=False, indent=2)
        
        print(f"üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ processed_news.json")
        
    except Exception as e:
        print(f"‚ö†Ô∏è  –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏: {e}")
    
    print("\n‚úÖ –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

def cleanup_old_images():
    """–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    try:
        import os
        import time
        
        images_dir = "images"
        if not os.path.exists(images_dir):
            return
        
        current_time = time.time()
        deleted_count = 0
        
        for filename in os.listdir(images_dir):
            filepath = os.path.join(images_dir, filename)
            if os.path.isfile(filepath):
                # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤
                if current_time - os.path.getctime(filepath) > 24 * 3600:
                    os.remove(filepath)
                    deleted_count += 1
        
        if deleted_count > 0:
            print(f"üóëÔ∏è  –í–∏–¥–∞–ª–µ–Ω–æ {deleted_count} —Å—Ç–∞—Ä–∏—Ö –∑–æ–±—Ä–∞–∂–µ–Ω—å")
            
    except Exception as e:
        print(f"‚ö†Ô∏è  –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å: {e}")

if __name__ == "__main__":
    try:
        # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º
        cleanup_old_images()
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º datetime –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        from datetime import datetime
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É
        main()
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  –ü—Ä–æ–≥—Ä–∞–º–∞ –∑—É–ø–∏–Ω–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        sys.exit(1)
